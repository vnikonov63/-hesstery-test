{"ast":null,"code":"var _jsxFileName = \"/Users/elbrus/Desktop/Tests/chesstery-test/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { startAllPokemons } from \"./components/redux/actions\";\nimport PokemonDetailed from \"./components/pokemonDetailed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst manyPokemonsStyles = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  margin: \"40px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"2px solid black\",\n  width: \"60%\"\n};\nconst overallStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexDirection: \"column\"\n};\nconst paginationAreaStyles = {\n  display: \"flex\",\n  justifyContent: \"center\"\n};\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    pokemons,\n    isError,\n    isLoading\n  } = useSelector(state => state.mainPage);\n  const [paginationCount, setPaginationCount] = useState(0);\n  useEffect(() => {\n    dispatch(startAllPokemons());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isError ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"An error occured, sorry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: overallStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          margin: \"25px\"\n        },\n        className: \"btn\",\n        onClick: () => {\n          dispatch(startAllPokemons());\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: paginationAreaStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPaginationCount(prev => {\n              return prev >= 1 ? prev - 1 : prev;\n            });\n          },\n          className: \"btn\",\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: manyPokemonsStyles,\n          children: pokemons.filter((pokemon, index) => {\n            return index % 10 === paginationCount;\n          }).map(({\n            name,\n            image,\n            id\n          }) => {\n            return /*#__PURE__*/_jsxDEV(PokemonDetailed, {\n              name: name,\n              image: image,\n              id: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 26\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPaginationCount(prev => {\n              return prev >= 1 ? prev - 1 : prev;\n            });\n          },\n          className: \"btn\",\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"dVsM2pQa2R7zxllT2h8sV2q0xBo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elbrus/Desktop/Tests/chesstery-test/app/src/App.js"],"names":["useDispatch","useSelector","useEffect","useState","startAllPokemons","PokemonDetailed","manyPokemonsStyles","display","flexWrap","margin","alignItems","justifyContent","border","width","overallStyles","flexDirection","paginationAreaStyles","App","dispatch","pokemons","isError","isLoading","state","mainPage","paginationCount","setPaginationCount","prev","filter","pokemon","index","map","name","image","id"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { startAllPokemons } from \"./components/redux/actions\";\n\nimport PokemonDetailed from \"./components/pokemonDetailed\";\n\nconst manyPokemonsStyles = {\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  margin: \"40px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  border: \"2px solid black\",\n  width: \"60%\",\n};\n\nconst overallStyles = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexDirection: \"column\",\n};\n\nconst paginationAreaStyles = {\n  display: \"flex\",\n  justifyContent: \"center\",\n};\nfunction App() {\n  const dispatch = useDispatch();\n  const { pokemons, isError, isLoading } = useSelector(\n    (state) => state.mainPage\n  );\n  const [paginationCount, setPaginationCount] = useState(0);\n  useEffect(() => {\n    dispatch(startAllPokemons());\n  }, []);\n  return (\n    <>\n      {isError ? (\n        <h2>An error occured, sorry</h2>\n      ) : isLoading ? (\n        <h3>Loading...</h3>\n      ) : (\n        <div style={overallStyles}>\n          <button\n            style={{\n              margin: \"25px\",\n            }}\n            className=\"btn\"\n            onClick={() => {\n              dispatch(startAllPokemons());\n            }}\n          >\n            Refresh\n          </button>\n          <div style={paginationAreaStyles}>\n            <button\n              onClick={() => {\n                setPaginationCount((prev) => {\n                  return prev >= 1 ? prev - 1 : prev;\n                });\n              }}\n              className=\"btn\"\n            >\n              prev\n            </button>\n            <div style={manyPokemonsStyles}>\n              {pokemons\n                .filter((pokemon, index) => {\n                  return index % 10 === paginationCount;\n                })\n                .map(({ name, image, id }) => {\n                  return <PokemonDetailed name={name} image={image} id={id} />;\n                })}\n            </div>\n            <button\n              onClick={() => {\n                setPaginationCount((prev) => {\n                  return prev >= 1 ? prev - 1 : prev;\n                });\n              }}\n              className=\"btn\"\n            >\n              next\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}