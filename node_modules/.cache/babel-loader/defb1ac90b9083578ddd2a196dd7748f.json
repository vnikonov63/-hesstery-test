{"ast":null,"code":"import * as actionTypes from \"./action-types.js\"; // Main Page\n\nexport function startAllPokemons() {\n  return async function (dispatch) {\n    try {\n      dispatch(removeMPError());\n      dispatch(toggleMPLoading());\n      const result = await fetch(\"https://api.pokemontcg.io/v1/cards\");\n      const finalResult = await result.json();\n      dispatch(setAllPokemons(finalResult.cards));\n      dispatch(toggleMPLoading());\n    } catch (error) {\n      console.log(error);\n      dispatch(setMPError());\n      dispatch(toggleMPLoading());\n    }\n  };\n}\nexport function setAllPokemons(pokemons) {\n  return {\n    type: actionTypes.SET_MANY_POKEMONS,\n    payload: {\n      pokemons\n    }\n  };\n}\nexport function setMPError() {\n  return {\n    type: actionTypes.SET_MAIN_PAGE_ERROR\n  };\n}\nexport function removeMPError() {\n  return {\n    type: actionTypes.REMOVE_MAIN_PAGE_ERROR\n  };\n}\nexport function toggleMPLoading() {\n  return {\n    type: actionTypes.TOGGLE_MAIN_PAGE_LOADING\n  };\n} // Single Pokemon\n\nexport function startPokemon() {\n  return async function (dispatch) {\n    try {\n      dispatch(removeMPError());\n      dispatch(toggleMPLoading());\n      const result = await fetch(\"https://api.pokemontcg.io/v1/cards\");\n      const finalResult = await result.json();\n      dispatch(setAllPokemons(finalResult.cards));\n      dispatch(toggleMPLoading());\n    } catch (error) {\n      console.log(error);\n      dispatch(setMPError());\n      dispatch(toggleMPLoading());\n    }\n  };\n}\nexport function setPokemon(pokemons) {\n  return {\n    type: actionTypes.SET_SINGLE_POKEMON,\n    payload: {\n      pokemons\n    }\n  };\n}\nexport function setSError() {\n  return {\n    type: actionTypes.SET_SINGLE_ERROR\n  };\n}\nexport function removeSError() {\n  return {\n    type: actionTypes.REMOVE_SINGLE_ERROR\n  };\n}\nexport function toggleSLoading() {\n  return {\n    type: actionTypes.TOGGLE_SINGLE_LOADING\n  };\n}","map":{"version":3,"sources":["/Users/elbrus/Desktop/Tests/chesstery-test/app/src/components/redux/actions.js"],"names":["actionTypes","startAllPokemons","dispatch","removeMPError","toggleMPLoading","result","fetch","finalResult","json","setAllPokemons","cards","error","console","log","setMPError","pokemons","type","SET_MANY_POKEMONS","payload","SET_MAIN_PAGE_ERROR","REMOVE_MAIN_PAGE_ERROR","TOGGLE_MAIN_PAGE_LOADING","startPokemon","setPokemon","SET_SINGLE_POKEMON","setSError","SET_SINGLE_ERROR","removeSError","REMOVE_SINGLE_ERROR","toggleSLoading","TOGGLE_SINGLE_LOADING"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B,C,CAEA;;AACA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAO,gBAAgBC,QAAhB,EAA0B;AAC/B,QAAI;AACFA,MAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACAD,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA1B;AACA,YAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,IAAP,EAA1B;AACAN,MAAAA,QAAQ,CAACO,cAAc,CAACF,WAAW,CAACG,KAAb,CAAf,CAAR;AACAR,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACD,KAPD,CAOE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,MAAAA,QAAQ,CAACY,UAAU,EAAX,CAAR;AACAZ,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACD;AACF,GAbD;AAcD;AAED,OAAO,SAASK,cAAT,CAAwBM,QAAxB,EAAkC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEhB,WAAW,CAACiB,iBADb;AAELC,IAAAA,OAAO,EAAE;AACPH,MAAAA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASD,UAAT,GAAsB;AAC3B,SAAO;AACLE,IAAAA,IAAI,EAAEhB,WAAW,CAACmB;AADb,GAAP;AAGD;AAED,OAAO,SAAShB,aAAT,GAAyB;AAC9B,SAAO;AACLa,IAAAA,IAAI,EAAEhB,WAAW,CAACoB;AADb,GAAP;AAGD;AAED,OAAO,SAAShB,eAAT,GAA2B;AAChC,SAAO;AACLY,IAAAA,IAAI,EAAEhB,WAAW,CAACqB;AADb,GAAP;AAGD,C,CAED;;AACA,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO,gBAAgBpB,QAAhB,EAA0B;AAC/B,QAAI;AACFA,MAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACAD,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACA,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA1B;AACA,YAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,IAAP,EAA1B;AACAN,MAAAA,QAAQ,CAACO,cAAc,CAACF,WAAW,CAACG,KAAb,CAAf,CAAR;AACAR,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACD,KAPD,CAOE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,MAAAA,QAAQ,CAACY,UAAU,EAAX,CAAR;AACAZ,MAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACD;AACF,GAbD;AAcD;AAED,OAAO,SAASmB,UAAT,CAAoBR,QAApB,EAA8B;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEhB,WAAW,CAACwB,kBADb;AAELN,IAAAA,OAAO,EAAE;AACPH,MAAAA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASU,SAAT,GAAqB;AAC1B,SAAO;AACLT,IAAAA,IAAI,EAAEhB,WAAW,CAAC0B;AADb,GAAP;AAGD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO;AACLX,IAAAA,IAAI,EAAEhB,WAAW,CAAC4B;AADb,GAAP;AAGD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO;AACLb,IAAAA,IAAI,EAAEhB,WAAW,CAAC8B;AADb,GAAP;AAGD","sourcesContent":["import * as actionTypes from \"./action-types.js\";\n\n// Main Page\nexport function startAllPokemons() {\n  return async function (dispatch) {\n    try {\n      dispatch(removeMPError());\n      dispatch(toggleMPLoading());\n      const result = await fetch(\"https://api.pokemontcg.io/v1/cards\");\n      const finalResult = await result.json();\n      dispatch(setAllPokemons(finalResult.cards));\n      dispatch(toggleMPLoading());\n    } catch (error) {\n      console.log(error);\n      dispatch(setMPError());\n      dispatch(toggleMPLoading());\n    }\n  };\n}\n\nexport function setAllPokemons(pokemons) {\n  return {\n    type: actionTypes.SET_MANY_POKEMONS,\n    payload: {\n      pokemons,\n    },\n  };\n}\n\nexport function setMPError() {\n  return {\n    type: actionTypes.SET_MAIN_PAGE_ERROR,\n  };\n}\n\nexport function removeMPError() {\n  return {\n    type: actionTypes.REMOVE_MAIN_PAGE_ERROR,\n  };\n}\n\nexport function toggleMPLoading() {\n  return {\n    type: actionTypes.TOGGLE_MAIN_PAGE_LOADING,\n  };\n}\n\n// Single Pokemon\nexport function startPokemon() {\n  return async function (dispatch) {\n    try {\n      dispatch(removeMPError());\n      dispatch(toggleMPLoading());\n      const result = await fetch(\"https://api.pokemontcg.io/v1/cards\");\n      const finalResult = await result.json();\n      dispatch(setAllPokemons(finalResult.cards));\n      dispatch(toggleMPLoading());\n    } catch (error) {\n      console.log(error);\n      dispatch(setMPError());\n      dispatch(toggleMPLoading());\n    }\n  };\n}\n\nexport function setPokemon(pokemons) {\n  return {\n    type: actionTypes.SET_SINGLE_POKEMON,\n    payload: {\n      pokemons,\n    },\n  };\n}\n\nexport function setSError() {\n  return {\n    type: actionTypes.SET_SINGLE_ERROR,\n  };\n}\n\nexport function removeSError() {\n  return {\n    type: actionTypes.REMOVE_SINGLE_ERROR,\n  };\n}\n\nexport function toggleSLoading() {\n  return {\n    type: actionTypes.TOGGLE_SINGLE_LOADING,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}